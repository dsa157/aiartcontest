<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Submit Image</title>
    <link rel="stylesheet" href="/css/styles.css">
</head>
<body>
    <div id="header"></div>
    <main>
        <section>
            <h2>Submit Image</h2>
            <form id="upload-form" enctype="multipart/form-data" method="POST" action="/submit">
                <div>
                    <label for="image">Select Image:</label>
                    <input type="file" id="image" name="image" accept="image/*" required>
                </div>
                <div id="image-preview" style="display: none;">
                    <h3>Image Preview:</h3>
                    <img id="preview" src="" alt="Image Preview" style="max-width: 100%; max-height: 300px;">
                </div>
                <div>
                    <label for="title">Title:</label>
                    <input type="text" id="title" name="title" required>
                </div>
                <div>
                    <label for="hashtags">Hashtags:</label>
                    <input type="text" id="hashtags" name="hashtags" placeholder="#tag1 #tag2">
                </div>
                <div>
                    <label for="tools">Tools:</label>
                    <input type="text" id="tools" name="tools" placeholder="Tool1, Tool2">
                </div>
                <button type="submit">Submit</button>
                <p id="warning" style="color: red; display: none;"></p>
            </form>
        </section>
    </main>
    <div id="footer"></div>
    <script src="/js/loadPartials.js"></script>
    <script>
        const maxFileSize = <%= config.maxFileSize %>;
        const maxImageDimension = <%= config.maxImageDimension %>;

        document.getElementById('image').addEventListener('change', function(event) {
            const file = event.target.files[0];
            const warning = document.getElementById('warning');
            const preview = document.getElementById('preview');
            const imagePreview = document.getElementById('image-preview');
            warning.style.display = 'none';
            imagePreview.style.display = 'none';
            preview.src = '';

            if (file) {
                if (file.size > maxFileSize) {
                    warning.textContent = `File size exceeds ${maxFileSize / 1024}KB.`;
                    warning.style.display = 'block';
                    event.target.value = '';
                    return;
                }

                const reader = new FileReader();
                reader.onload = function(e) {
                    const img = new Image();
                    img.src = e.target.result;
                    img.onload = function() {
                        if (img.width > maxImageDimension || img.height > maxImageDimension) {
                            warning.textContent = `Image dimensions exceed ${maxImageDimension} pixels on the longest side.`;
                            warning.style.display = 'block';
                            event.target.value = '';
                            return;
                        }
                        preview.src = e.target.result;
                        imagePreview.style.display = 'block';
                    };
                };
                reader.readAsDataURL(file);
            }
        });
    </script>
</body>
</html>
